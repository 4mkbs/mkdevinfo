name: Build and Release APK

on:
  push:
    branches: [main, develop]
    tags:
      - "v*"
  pull_request:
    branches: [main]

env:
  GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4g -Dorg.gradle.daemon=false -Dkotlin.incremental=false"

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run unit tests
        run: ./gradlew test

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: app/build/reports/tests/

  build:
    name: Build APK
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Debug APK
        run: ./gradlew assembleDebug

      - name: Build Release APK
        run: ./gradlew assembleRelease

      - name: Sign Release APK
        if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "33.0.0"

      - name: Upload Debug APK
        uses: actions/upload-artifact@v3
        with:
          name: devinfo-debug
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Upload Release APK
        uses: actions/upload-artifact@v3
        with:
          name: devinfo-release
          path: app/build/outputs/apk/release/app-release*.apk

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download APK artifacts
        uses: actions/download-artifact@v3
        with:
          name: devinfo-release
          path: ./

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: DevInfo ${{ steps.get_version.outputs.VERSION }}
          body: |
            ## DevInfo ${{ steps.get_version.outputs.VERSION }}

            ### Features
            - 📊 Real-time system monitoring dashboard
            - 🔋 Battery status and health monitoring
            - 💾 Memory and storage usage tracking
            - 📡 Network connectivity information
            - 🔧 Hardware specifications display
            - 📱 Device system information
            - 📷 Camera specifications
            - 🎯 Sensor data monitoring
            - 🎈 Floating overlay monitor
            - ⚡ Performance benchmarking tools
            - 🌙 Light/Dark theme support

            ### What's New
            - Initial release with all core features
            - Material Design 3 UI
            - Real-time monitoring capabilities
            - Comprehensive device information

            ### Installation
            1. Download the APK file below
            2. Enable "Install from unknown sources" in your device settings
            3. Install the APK
            4. Grant necessary permissions for full functionality

            ### Permissions Required
            - **Display over other apps**: For floating overlay monitor
            - **Device & app history**: For system information
            - **Photos/Media/Files**: For storage analysis
            - **Camera**: For camera specifications
            - **Location**: For network information

            ---

            **Minimum Android Version**: Android 5.0 (API 21)
            **Target Android Version**: Android 14 (API 34)
          draft: false
          prerelease: false

      - name: Upload Release APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app-release-unsigned.apk
          asset_name: DevInfo-${{ steps.get_version.outputs.VERSION }}.apk
          asset_content_type: application/vnd.android.package-archive

  notification:
    name: Send Notification
    runs-on: ubuntu-latest
    needs: [test, build, release]
    if: always()

    steps:
      - name: Notify on Success
        if: needs.test.result == 'success' && needs.build.result == 'success'
        run: |
          echo "✅ Build completed successfully!"
          echo "- Tests: ${{ needs.test.result }}"
          echo "- Build: ${{ needs.build.result }}"
          if [ "${{ needs.release.result }}" != "skipped" ]; then
            echo "- Release: ${{ needs.release.result }}"
          fi

      - name: Notify on Failure
        if: needs.test.result == 'failure' || needs.build.result == 'failure'
        run: |
          echo "❌ Build failed!"
          echo "- Tests: ${{ needs.test.result }}"
          echo "- Build: ${{ needs.build.result }}"
          exit 1
